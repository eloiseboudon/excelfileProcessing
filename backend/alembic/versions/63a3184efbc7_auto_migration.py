"""Auto migration

Revision ID: 63a3184efbc7
Revises: 9bc8af58f6e0
Create Date: 2025-09-04 13:59:25.598108

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '63a3184efbc7'
down_revision: Union[str, Sequence[str], None] = '9bc8af58f6e0'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('memory_translations')
    op.drop_table('type_translations')
    op.drop_table('brand_translations')
    op.create_unique_constraint(None, 'brands', ['brand'])
    op.create_unique_constraint(None, 'color_translations', ['color_source'])
    op.create_unique_constraint(None, 'colors', ['color'])
    op.create_unique_constraint(None, 'device_types', ['type'])
    op.create_unique_constraint(None, 'memory_options', ['memory'])
    op.create_unique_constraint(None, 'norme_options', ['norme'])
    op.create_unique_constraint(None, 'ram_options', ['ram'])
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'ram_options', type_='unique')
    op.drop_constraint(None, 'norme_options', type_='unique')
    op.drop_constraint(None, 'memory_options', type_='unique')
    op.drop_constraint(None, 'device_types', type_='unique')
    op.drop_constraint(None, 'colors', type_='unique')
    op.drop_constraint(None, 'color_translations', type_='unique')
    op.drop_constraint(None, 'brands', type_='unique')
    op.create_table('brand_translations',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('brand_source', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('brand_target', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('brand_target_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['brand_target_id'], ['brands.id'], name=op.f('brand_translations_brand_target_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('brand_translations_pkey'))
    )
    op.create_table('type_translations',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('type_source', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('type_target', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('type_target_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['type_target_id'], ['device_types.id'], name=op.f('type_translations_type_target_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('type_translations_pkey'))
    )
    op.create_table('memory_translations',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('memory_source', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('memory_target', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('memory_target_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['memory_target_id'], ['memory_options.id'], name=op.f('memory_translations_memory_target_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('memory_translations_pkey'))
    )
    # ### end Alembic commands ###
