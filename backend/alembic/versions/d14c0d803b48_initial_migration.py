"""Initial migration

Revision ID: d14c0d803b48
Revises: 
Create Date: 2025-07-09 15:23:08.714206

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'd14c0d803b48'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('brands',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('brand', sa.String(length=50), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('colors',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('color', sa.String(length=50), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('device_types',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('type', sa.String(length=50), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('memory_options',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('memory', sa.String(length=50), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('suppliers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=True),
    sa.Column('phone', sa.String(length=20), nullable=True),
    sa.Column('address', sa.String(length=200), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('color_translations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('color_source', sa.String(length=50), nullable=False),
    sa.Column('color_target', sa.String(length=50), nullable=False),
    sa.Column('color_target_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['color_target_id'], ['colors.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('import_histories',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('filename', sa.String(length=200), nullable=False),
    sa.Column('supplier_id', sa.Integer(), nullable=True),
    sa.Column('product_count', sa.Integer(), nullable=False),
    sa.Column('import_date', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['supplier_id'], ['suppliers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('product_references',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('description', sa.String(length=200), nullable=False),
    sa.Column('quantity', sa.Float(), nullable=True),
    sa.Column('selling_price', sa.Float(), nullable=True),
    sa.Column('ean', sa.String(length=20), nullable=False),
    sa.Column('supplier_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['supplier_id'], ['suppliers.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('ean', 'supplier_id', name='uix_reference_ean_supplier')
    )
    op.create_table('temporary_imports',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('description', sa.String(length=200), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=True),
    sa.Column('selling_price', sa.Float(), nullable=True),
    sa.Column('ean', sa.String(length=20), nullable=False),
    sa.Column('supplier_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['supplier_id'], ['suppliers.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('ean', 'supplier_id', name='uix_temp_ean_supplier')
    )
    op.create_table('products',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('reference_id', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(length=120), nullable=False),
    sa.Column('description', sa.String(length=120), nullable=False),
    sa.Column('supplier_id', sa.Integer(), nullable=True),
    sa.Column('brand_id', sa.Integer(), nullable=True),
    sa.Column('memory_id', sa.Integer(), nullable=True),
    sa.Column('color_id', sa.Integer(), nullable=True),
    sa.Column('type_id', sa.Integer(), nullable=True),
    sa.Column('price', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['brand_id'], ['brands.id'], ),
    sa.ForeignKeyConstraint(['color_id'], ['colors.id'], ),
    sa.ForeignKeyConstraint(['memory_id'], ['memory_options.id'], ),
    sa.ForeignKeyConstraint(['reference_id'], ['product_references.id'], ),
    sa.ForeignKeyConstraint(['supplier_id'], ['suppliers.id'], ),
    sa.ForeignKeyConstraint(['type_id'], ['device_types.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('reference_id', 'supplier_id', name='uix_product_reference_supplier')
    )
    op.create_table('product_calculations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=False),
    sa.Column('tcp', sa.Float(), nullable=False),
    sa.Column('marge4_5', sa.Float(), nullable=False),
    sa.Column('prixht_tcp_marge4_5', sa.Float(), nullable=False),
    sa.Column('prixht_marge4_5', sa.Float(), nullable=False),
    sa.Column('prixht_max', sa.Float(), nullable=False),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('product_calculations')
    op.drop_table('products')
    op.drop_table('temporary_imports')
    op.drop_table('product_references')
    op.drop_table('import_histories')
    op.drop_table('color_translations')
    op.drop_table('suppliers')
    op.drop_table('memory_options')
    op.drop_table('device_types')
    op.drop_table('colors')
    op.drop_table('brands')
    # ### end Alembic commands ###
