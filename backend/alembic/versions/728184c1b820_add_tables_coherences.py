"""add tables coherences

Revision ID: 728184c1b820
Revises: 6c3deea15a64
Create Date: 2025-07-12 17:08:33.923821

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '728184c1b820'
down_revision: Union[str, Sequence[str], None] = '6c3deea15a64'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('brand_translations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('brand_source', sa.String(length=50), nullable=False),
    sa.Column('brand_target', sa.String(length=50), nullable=False),
    sa.Column('brand_target_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['brand_target_id'], ['brands.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('memory_translations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('memory_source', sa.String(length=50), nullable=False),
    sa.Column('memory_target', sa.String(length=50), nullable=False),
    sa.Column('memory_target_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['memory_target_id'], ['memory_options.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('type_translations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('type_source', sa.String(length=50), nullable=False),
    sa.Column('type_target', sa.String(length=50), nullable=False),
    sa.Column('type_target_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['type_target_id'], ['device_types.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.add_column('temporary_imports', sa.Column('model', sa.String(length=200), nullable=True))
    op.add_column('temporary_imports', sa.Column('brand_id', sa.Integer(), nullable=True))
    op.add_column('temporary_imports', sa.Column('memory_id', sa.Integer(), nullable=True))
    op.add_column('temporary_imports', sa.Column('color_id', sa.Integer(), nullable=True))
    op.add_column('temporary_imports', sa.Column('type_id', sa.Integer(), nullable=True))
    op.alter_column('temporary_imports', 'description',
               existing_type=sa.VARCHAR(length=200),
               nullable=True)
    op.create_foreign_key(None, 'temporary_imports', 'brands', ['brand_id'], ['id'])
    op.create_foreign_key(None, 'temporary_imports', 'device_types', ['type_id'], ['id'])
    op.create_foreign_key(None, 'temporary_imports', 'memory_options', ['memory_id'], ['id'])
    op.create_foreign_key(None, 'temporary_imports', 'colors', ['color_id'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'temporary_imports', type_='foreignkey')
    op.drop_constraint(None, 'temporary_imports', type_='foreignkey')
    op.drop_constraint(None, 'temporary_imports', type_='foreignkey')
    op.drop_constraint(None, 'temporary_imports', type_='foreignkey')
    op.alter_column('temporary_imports', 'description',
               existing_type=sa.VARCHAR(length=200),
               nullable=False)
    op.drop_column('temporary_imports', 'type_id')
    op.drop_column('temporary_imports', 'color_id')
    op.drop_column('temporary_imports', 'memory_id')
    op.drop_column('temporary_imports', 'brand_id')
    op.drop_column('temporary_imports', 'model')
    op.drop_table('type_translations')
    op.drop_table('memory_translations')
    op.drop_table('brand_translations')
    # ### end Alembic commands ###
